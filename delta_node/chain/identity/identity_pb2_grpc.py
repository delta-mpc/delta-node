# type: ignore
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import identity_pb2 as identity__pb2
from ..transaction import transaction_pb2 as transaction__pb2


class IdentityStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Join = channel.unary_unary(
                '/identity.Identity/Join',
                request_serializer=identity__pb2.JoinReq.SerializeToString,
                response_deserializer=identity__pb2.JoinResp.FromString,
                )
        self.UpdateUrl = channel.unary_unary(
                '/identity.Identity/UpdateUrl',
                request_serializer=identity__pb2.UpdateUrlReq.SerializeToString,
                response_deserializer=transaction__pb2.Transaction.FromString,
                )
        self.UpdateName = channel.unary_unary(
                '/identity.Identity/UpdateName',
                request_serializer=identity__pb2.UpdateNameReq.SerializeToString,
                response_deserializer=transaction__pb2.Transaction.FromString,
                )
        self.Leave = channel.unary_unary(
                '/identity.Identity/Leave',
                request_serializer=identity__pb2.LeaveReq.SerializeToString,
                response_deserializer=transaction__pb2.Transaction.FromString,
                )
        self.GetNodeInfo = channel.unary_unary(
                '/identity.Identity/GetNodeInfo',
                request_serializer=identity__pb2.NodeInfoReq.SerializeToString,
                response_deserializer=identity__pb2.NodeInfo.FromString,
                )
        self.GetNodes = channel.unary_unary(
                '/identity.Identity/GetNodes',
                request_serializer=identity__pb2.NodeInfosReq.SerializeToString,
                response_deserializer=identity__pb2.NodeInfos.FromString,
                )


class IdentityServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Join(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUrl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Leave(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNodeInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNodes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IdentityServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Join': grpc.unary_unary_rpc_method_handler(
                    servicer.Join,
                    request_deserializer=identity__pb2.JoinReq.FromString,
                    response_serializer=identity__pb2.JoinResp.SerializeToString,
            ),
            'UpdateUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUrl,
                    request_deserializer=identity__pb2.UpdateUrlReq.FromString,
                    response_serializer=transaction__pb2.Transaction.SerializeToString,
            ),
            'UpdateName': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateName,
                    request_deserializer=identity__pb2.UpdateNameReq.FromString,
                    response_serializer=transaction__pb2.Transaction.SerializeToString,
            ),
            'Leave': grpc.unary_unary_rpc_method_handler(
                    servicer.Leave,
                    request_deserializer=identity__pb2.LeaveReq.FromString,
                    response_serializer=transaction__pb2.Transaction.SerializeToString,
            ),
            'GetNodeInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNodeInfo,
                    request_deserializer=identity__pb2.NodeInfoReq.FromString,
                    response_serializer=identity__pb2.NodeInfo.SerializeToString,
            ),
            'GetNodes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNodes,
                    request_deserializer=identity__pb2.NodeInfosReq.FromString,
                    response_serializer=identity__pb2.NodeInfos.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'identity.Identity', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Identity(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Join(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/Join',
            identity__pb2.JoinReq.SerializeToString,
            identity__pb2.JoinResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/UpdateUrl',
            identity__pb2.UpdateUrlReq.SerializeToString,
            transaction__pb2.Transaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/UpdateName',
            identity__pb2.UpdateNameReq.SerializeToString,
            transaction__pb2.Transaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Leave(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/Leave',
            identity__pb2.LeaveReq.SerializeToString,
            transaction__pb2.Transaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNodeInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/GetNodeInfo',
            identity__pb2.NodeInfoReq.SerializeToString,
            identity__pb2.NodeInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/identity.Identity/GetNodes',
            identity__pb2.NodeInfosReq.SerializeToString,
            identity__pb2.NodeInfos.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
